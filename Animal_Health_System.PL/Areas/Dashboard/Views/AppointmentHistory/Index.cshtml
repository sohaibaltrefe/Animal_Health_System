@model IEnumerable<AppointmentHistoryVM>

@{
    ViewData["Title"] = "Appointment History List";
}

@section Header {
    Appointment History List
}

@section loc {
    Index
}

<div class="col-md-12">
    <div class="card shadow-sm">
        <div class="card-header text-center">
            <h3 class="card-title font-weight-bold">Show All Appointment History</h3>
        </div>
        <div class="card-body">
            <!-- Display TempData messages -->
            @if (TempData["NoAppointments"] != null)
            {
                <div class="alert alert-warning text-center">
                    <p>@TempData["NoAppointments"]</p>
                </div>
            }

            <div class="d-flex justify-content-between mb-3">
                <!-- Create new appointment history button -->
                <a asp-controller="AppointmentHistory" asp-action="Create" class="btn btn-light btn-outline-primary">
                    Create New Appointment History
                </a>
            </div>

            <!-- Appointment History Table -->
            <table class="table table-bordered table-hover">
                <thead class="thead-light">
                    <tr>
                        <th>Appointment Name</th>
                        <th>Status</th>
                        <th>Animal Name</th>
                        <th>Created At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.AppointmentName</td>
                            <td>@item.Status</td>
                            <td>@item.AnimalName</td>
                            <td>@item.CreatedAt.ToString("dd MMM yyyy HH:mm")</td>
                            <td>
                                <a asp-controller="AppointmentHistory" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-controller="AppointmentHistory" asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                    <i class="fas fa-eye"></i> Details
                                </a>
                                <a href="javascript:void(0)" data-id="@item.Id" class="btn btn-danger btn-sm delete-btn">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination (if needed) -->
            @if (Model.Any())
            {
                <!-- Add your pagination here, if necessary -->
            }
        </div>
    </div>
</div>

@section script {
    <script>
        const elements = document.querySelectorAll(".delete-btn");
        elements.forEach(function (button) {
            button.addEventListener("click", async () => {
                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: "btn btn-success",
                        cancelButton: "btn btn-danger"
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel!",
                    reverseButtons: true
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const id = button.dataset.id;
                        const response = await fetch(`/Dashboard/AppointmentHistory/DeleteConfirmed/${id}`, {
                            method: 'POST',
                            headers: {
                                "Content-Type": "application/json"
                            }
                        });

                        const data = await response.json();
                        if (response.ok) {
                            $(button).closest("tr").remove();
                        }

                        const Toast = Swal.mixin({
                            toast: true,
                            position: "top-end",
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.onmouseenter = Swal.stopTimer;
                                toast.onmouseleave = Swal.resumeTimer;
                            }
                        });

                        Toast.fire({
                            icon: "success",
                            title: "Deleted successfully"
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        swalWithBootstrapButtons.fire({
                            title: "Cancelled",
                            text: "Your imaginary file is safe :)",
                            icon: "error"
                        });
                    }
                });
            });
        });
    </script>
}
