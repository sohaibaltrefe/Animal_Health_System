// <auto-generated />
using System;
using Animal_Health_System.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Animal_Health_System.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250129210138_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentHealthStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("FarmId", "Name")
                        .IsUnique()
                        .HasFilter("[FarmId] IS NOT NULL");

                    b.ToTable("animals", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.AnimalHealthHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("AnimalId", "MedicalRecordId")
                        .IsUnique()
                        .HasDatabaseName("Idx_AnimalHealthHistory_AnimalId_MedicalRecordId")
                        .HasFilter("[AnimalId] IS NOT NULL AND [MedicalRecordId] IS NOT NULL");

                    b.HasIndex("Name", "EventDate")
                        .IsUnique()
                        .HasDatabaseName("Idx_AnimalHealthHistory_Name_EventDate");

                    b.ToTable("animalHealthHistories", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<int?>("FarmStaffId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("FarmStaffId");

                    b.HasIndex("VeterinarianId");

                    b.HasIndex("AnimalId", "AppointmentDate")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.HasIndex("AnimalId", "AppointmentDate", "VeterinarianId")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL AND [VeterinarianId] IS NOT NULL");

                    b.ToTable("appointments", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.AppointmentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("appointmentHistories", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Birth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("BirthCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfOffspring")
                        .HasColumnType("int");

                    b.Property<int?>("PregnancyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("PregnancyId");

                    b.HasIndex("AnimalId", "BirthDate")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("births", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.BreedingReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("BirthCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MatingDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfOffspring")
                        .HasColumnType("int");

                    b.Property<string>("PregnancyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("MatingId");

                    b.HasIndex("AnimalId", "ReportDate")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("breedingReports", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("Name", "OwnerId")
                        .IsUnique()
                        .HasFilter("[OwnerId] IS NOT NULL");

                    b.ToTable("farms", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.FarmHealthSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<int>("HealthyAnimals")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SickAnimals")
                        .HasColumnType("int");

                    b.Property<int>("TotalAnimals")
                        .HasColumnType("int");

                    b.Property<int>("UnderTreatment")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmId")
                        .IsUnique()
                        .HasFilter("[FarmId] IS NOT NULL");

                    b.ToTable("farmHealthSummaries", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.FarmStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("FarmId", "FullName")
                        .IsUnique()
                        .HasFilter("[FarmId] IS NOT NULL");

                    b.ToTable("farmStaff", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.HealthReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<int?>("FarmStaffId")
                        .HasColumnType("int");

                    b.Property<int>("HealthyAnimals")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SickAnimals")
                        .HasColumnType("int");

                    b.Property<int>("TotalAnimals")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmStaffId");

                    b.HasIndex("FarmId", "ReportDate")
                        .IsUnique()
                        .HasFilter("[FarmId] IS NOT NULL");

                    b.ToTable("healthReports", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Mating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FemaleAnimalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaleAnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FemaleAnimalId");

                    b.HasIndex("MaleAnimalId", "FemaleAnimalId", "MatingDate")
                        .IsUnique()
                        .HasFilter("[MaleAnimalId] IS NOT NULL AND [FemaleAnimalId] IS NOT NULL");

                    b.ToTable("matings", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicalExamination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExaminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExaminationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FarmStaffId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmStaffId");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("VeterinarianId");

                    b.HasIndex("AnimalId", "ExaminationDate")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("medicalExaminations", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("medicalRecords", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalExaminationId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicationStockId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PrescriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MedicalExaminationId");

                    b.HasIndex("MedicationStockId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PrescriptionId");

                    b.ToTable("medications", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicationStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("medicationStocks", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmStaffId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("PregnancyId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("FarmStaffId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.HasIndex("PregnancyId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("notifications", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("owners", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Pregnancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpectedBirthDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasComplications")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId", "MatingDate")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("pregnancies", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalExaminationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MedicalExaminationId", "CreatedAt")
                        .IsUnique()
                        .HasFilter("[MedicalExaminationId] IS NOT NULL");

                    b.ToTable("prescriptions", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.ProductionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateProduction")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmStaffId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QuantityProduced")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeProduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmStaffId");

                    b.HasIndex("AnimalId", "DateProduction")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("productionRecords", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.TreatmentPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalExaminationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PlanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TreatmentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MedicalExaminationId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("treatmentPlans", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AdministrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("VeterinarianId");

                    b.HasIndex("Name", "AdministrationDate")
                        .IsUnique();

                    b.ToTable("vaccines", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.VaccineHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AdministrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmStaffId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.Property<int?>("VeterinarianId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmStaffId");

                    b.HasIndex("VaccineId");

                    b.HasIndex("VeterinarianId");

                    b.HasIndex("AnimalId", "VaccineId", "AdministrationDate")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL AND [VaccineId] IS NOT NULL");

                    b.ToTable("vaccineHistories", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.VaccineReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VaccineId");

                    b.HasIndex("AnimalId", "VaccineId")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL AND [VaccineId] IS NOT NULL");

                    b.ToTable("vaccineReminders", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Veterinarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("veterinarians", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "dbo");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Animal", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Farm", "Farms")
                        .WithMany("Animals")
                        .HasForeignKey("FarmId");

                    b.Navigation("Farms");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.AnimalHealthHistory", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animal")
                        .WithMany("AnimalHealthHistories")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.MedicalRecord", "MedicalRecords")
                        .WithMany()
                        .HasForeignKey("MedicalRecordId");

                    b.Navigation("Animal");

                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Appointment", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("Appointments")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.Farm", "Farms")
                        .WithMany("Appointments")
                        .HasForeignKey("FarmId");

                    b.HasOne("Animal_Health_System.DAL.Models.FarmStaff", "FarmStaffs")
                        .WithMany("Appointments")
                        .HasForeignKey("FarmStaffId");

                    b.HasOne("Animal_Health_System.DAL.Models.Veterinarian", "Veterinarian")
                        .WithMany("Appointments")
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("Animals");

                    b.Navigation("FarmStaffs");

                    b.Navigation("Farms");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.AppointmentHistory", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Appointment", "Appointments")
                        .WithMany("AppointmentHistories")
                        .HasForeignKey("AppointmentId");

                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Birth", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("Births")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.Farm", "Farms")
                        .WithMany("Births")
                        .HasForeignKey("FarmId");

                    b.HasOne("Animal_Health_System.DAL.Models.Pregnancy", "Pregnancys")
                        .WithMany("Births")
                        .HasForeignKey("PregnancyId");

                    b.Navigation("Animals");

                    b.Navigation("Farms");

                    b.Navigation("Pregnancys");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.BreedingReport", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("BreedingReports")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.Farm", null)
                        .WithMany("BreedingReports")
                        .HasForeignKey("FarmId");

                    b.HasOne("Animal_Health_System.DAL.Models.Mating", "Matings")
                        .WithMany("BreedingReports")
                        .HasForeignKey("MatingId");

                    b.Navigation("Animals");

                    b.Navigation("Matings");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Farm", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Owner", "Owners")
                        .WithMany("Farms")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.FarmHealthSummary", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Farm", "Farms")
                        .WithMany("FarmHealthSummaries")
                        .HasForeignKey("FarmId");

                    b.Navigation("Farms");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.FarmStaff", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", null)
                        .WithMany("FarmStaffs")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.Farm", "Farm")
                        .WithMany("FarmStaffs")
                        .HasForeignKey("FarmId");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.HealthReport", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Farm", "Farms")
                        .WithMany()
                        .HasForeignKey("FarmId");

                    b.HasOne("Animal_Health_System.DAL.Models.FarmStaff", "FarmStaffs")
                        .WithMany("HealthReports")
                        .HasForeignKey("FarmStaffId");

                    b.Navigation("FarmStaffs");

                    b.Navigation("Farms");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Mating", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "FemaleAnimal")
                        .WithMany()
                        .HasForeignKey("FemaleAnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "MaleAnimal")
                        .WithMany()
                        .HasForeignKey("MaleAnimalId");

                    b.Navigation("FemaleAnimal");

                    b.Navigation("MaleAnimal");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicalExamination", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("MedicalExaminations")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.FarmStaff", "FarmStaffs")
                        .WithMany("MedicalExaminations")
                        .HasForeignKey("FarmStaffId");

                    b.HasOne("Animal_Health_System.DAL.Models.MedicalRecord", "MedicalRecords")
                        .WithMany("Examinations")
                        .HasForeignKey("MedicalRecordId");

                    b.HasOne("Animal_Health_System.DAL.Models.Veterinarian", "Veterinarians")
                        .WithMany("MedicalExaminations")
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("Animals");

                    b.Navigation("FarmStaffs");

                    b.Navigation("MedicalRecords");

                    b.Navigation("Veterinarians");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicalRecord", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithOne("MedicalRecords")
                        .HasForeignKey("Animal_Health_System.DAL.Models.MedicalRecord", "AnimalId");

                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Medication", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.MedicalExamination", "MedicalExaminations")
                        .WithMany("Medications")
                        .HasForeignKey("MedicalExaminationId");

                    b.HasOne("Animal_Health_System.DAL.Models.MedicationStock", "MedicationStocks")
                        .WithMany("Medications")
                        .HasForeignKey("MedicationStockId");

                    b.HasOne("Animal_Health_System.DAL.Models.Prescription", "Prescriptions")
                        .WithMany("medications")
                        .HasForeignKey("PrescriptionId");

                    b.Navigation("MedicalExaminations");

                    b.Navigation("MedicationStocks");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Notification", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animal")
                        .WithMany("PregnancyNotifications")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.FarmStaff", "FarmStaff")
                        .WithMany("Notifications")
                        .HasForeignKey("FarmStaffId");

                    b.HasOne("Animal_Health_System.DAL.Models.Owner", "Owner")
                        .WithMany("Notifications")
                        .HasForeignKey("OwnerId");

                    b.HasOne("Animal_Health_System.DAL.Models.Pregnancy", "Pregnancy")
                        .WithMany()
                        .HasForeignKey("PregnancyId");

                    b.HasOne("Animal_Health_System.DAL.Models.Veterinarian", "Veterinarian")
                        .WithMany("Notifications")
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("Animal");

                    b.Navigation("FarmStaff");

                    b.Navigation("Owner");

                    b.Navigation("Pregnancy");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Pregnancy", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("Pregnancies")
                        .HasForeignKey("AnimalId");

                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Prescription", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.MedicalExamination", "MedicalExaminations")
                        .WithMany("Prescriptions")
                        .HasForeignKey("MedicalExaminationId");

                    b.Navigation("MedicalExaminations");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.ProductionRecord", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("ProductionRecords")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.FarmStaff", "FarmStaffs")
                        .WithMany("ProductionRecords")
                        .HasForeignKey("FarmStaffId");

                    b.Navigation("Animals");

                    b.Navigation("FarmStaffs");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.TreatmentPlan", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.MedicalExamination", "MedicalExaminations")
                        .WithMany("TreatmentPlans")
                        .HasForeignKey("MedicalExaminationId");

                    b.Navigation("MedicalExaminations");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Vaccine", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.MedicalRecord", "MedicalRecords")
                        .WithMany("Vaccines")
                        .HasForeignKey("MedicalRecordId");

                    b.HasOne("Animal_Health_System.DAL.Models.Veterinarian", "Veterinarians")
                        .WithMany()
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("MedicalRecords");

                    b.Navigation("Veterinarians");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.VaccineHistory", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany("VaccineHistories")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.FarmStaff", "FarmStaffs")
                        .WithMany("VaccineHistories")
                        .HasForeignKey("FarmStaffId");

                    b.HasOne("Animal_Health_System.DAL.Models.Vaccine", "Vaccines")
                        .WithMany("VaccineHistories")
                        .HasForeignKey("VaccineId");

                    b.HasOne("Animal_Health_System.DAL.Models.Veterinarian", "Veterinarian")
                        .WithMany("VaccineHistories")
                        .HasForeignKey("VeterinarianId");

                    b.Navigation("Animals");

                    b.Navigation("FarmStaffs");

                    b.Navigation("Vaccines");

                    b.Navigation("Veterinarian");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.VaccineReminder", b =>
                {
                    b.HasOne("Animal_Health_System.DAL.Models.Animal", "Animals")
                        .WithMany()
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animal_Health_System.DAL.Models.Vaccine", "Vaccines")
                        .WithMany()
                        .HasForeignKey("VaccineId");

                    b.Navigation("Animals");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Animal", b =>
                {
                    b.Navigation("AnimalHealthHistories");

                    b.Navigation("Appointments");

                    b.Navigation("Births");

                    b.Navigation("BreedingReports");

                    b.Navigation("FarmStaffs");

                    b.Navigation("MedicalExaminations");

                    b.Navigation("MedicalRecords")
                        .IsRequired();

                    b.Navigation("Pregnancies");

                    b.Navigation("PregnancyNotifications");

                    b.Navigation("ProductionRecords");

                    b.Navigation("VaccineHistories");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Appointment", b =>
                {
                    b.Navigation("AppointmentHistories");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Farm", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Appointments");

                    b.Navigation("Births");

                    b.Navigation("BreedingReports");

                    b.Navigation("FarmHealthSummaries");

                    b.Navigation("FarmStaffs");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.FarmStaff", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("HealthReports");

                    b.Navigation("MedicalExaminations");

                    b.Navigation("Notifications");

                    b.Navigation("ProductionRecords");

                    b.Navigation("VaccineHistories");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Mating", b =>
                {
                    b.Navigation("BreedingReports");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicalExamination", b =>
                {
                    b.Navigation("Medications");

                    b.Navigation("Prescriptions");

                    b.Navigation("TreatmentPlans");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicalRecord", b =>
                {
                    b.Navigation("Examinations");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.MedicationStock", b =>
                {
                    b.Navigation("Medications");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Owner", b =>
                {
                    b.Navigation("Farms");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Pregnancy", b =>
                {
                    b.Navigation("Births");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Prescription", b =>
                {
                    b.Navigation("medications");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Vaccine", b =>
                {
                    b.Navigation("VaccineHistories");
                });

            modelBuilder.Entity("Animal_Health_System.DAL.Models.Veterinarian", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("MedicalExaminations");

                    b.Navigation("Notifications");

                    b.Navigation("VaccineHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
